<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>硬件 | 软件 on xVan</title>
    <link>https://cheng.fan/categories/%E7%A1%AC%E4%BB%B6-%E8%BD%AF%E4%BB%B6/</link>
    <description>Recent content in 硬件 | 软件 on xVan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Apr 2019 01:54:05 +0800</lastBuildDate>
    
	<atom:link href="https://cheng.fan/categories/%E7%A1%AC%E4%BB%B6-%E8%BD%AF%E4%BB%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>树莓派编译RTL8812au无线网卡</title>
      <link>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%BC%96%E8%AF%91rtl8812au%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/</link>
      <pubDate>Sat, 27 Apr 2019 01:54:05 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%BC%96%E8%AF%91rtl8812au%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/</guid>
      <description>树莓派2b是100M网口，于是想能不能提升下弄个千兆网口，虽然是USB2.0限制，但是也会有一定的提升吧，当然结局是比较悲伤的，不折腾了，记录下编译这个网卡的步骤，我买的是 COMFAST CF-912AC 这款的芯片是RTL8812au 安装内核 sudo apt-get install raspberrypi-kernel-headers build-essential  耐心等一会，我之前手急给中断了，坏了，重装&amp;hellip;
编译 sudo git clone https://github.com/gnab/rtl8812au.git cd rtl8812au sudo vi Makefile CONFIG_PLATFORM_I386_PC = n CONFIG_PLATFORM_ARM_RPI = y  修改后 make -j4 ，等几分钟
sudo make install sudo reboot  这样，看是不是能驱动起来</description>
    </item>
    
    <item>
      <title>树莓派连结NAS</title>
      <link>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9E%E7%BB%93nas/</link>
      <pubDate>Sat, 27 Apr 2019 01:35:06 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9E%E7%BB%93nas/</guid>
      <description>树莓派虽然性能差了些，但是又不是不能用，挂载硬盘后装个NAS，内网访问还是挺爽的 安装NAS sudo apt-get install samba samba-common-bin  以上两个是必须，下面两个是可选
sudo apt-get install netatalk (用于支持AFP) sudo apt-get install avahi-daemon（用于支持网内的计算机自动发现）  配置文件 备份配置文件
sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.back  编辑
sudo vi /etc/samba/smb.conf  最后一行添加
[PiNAS] # 说明信息 comment = NAS Storage # 可以访问的用户 valid users = pi,root # 共享文件的路径 path = /media/pi/ # 列目录 browseable = yes # 可写 writable = yes # 新建文件的权限为 664 create mask = 0664 # 新建目录的权限为 775 directory mask = 0775  复制时候，最好把说明信息删除，我好像记得踩过坑</description>
    </item>
    
    <item>
      <title>树莓派快速安装,挂载,docker环境</title>
      <link>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85%E6%8C%82%E8%BD%BDdocker%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Thu, 25 Apr 2019 02:45:56 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85%E6%8C%82%E8%BD%BDdocker%E7%8E%AF%E5%A2%83/</guid>
      <description>最近手里的树莓派老是被我玩坏，于是乎重装次数就多了起来，记录下这一套我需要环境的流程操作 SD卡安装 简单概括下就是sd卡format下，然后把img灌进去，所需要的软件有两个
 SD Card Formatter
 Win32DiskImager
  树莓派系统初始化 连上键盘显示器，进入系统后，初始密码raspberry，修改密码，允许并enable ssh
sudo systemctl start ssh sudo systemctl enable ssh  搞定后，就不用趴在显示器前，回到电脑前，ssh进去即可
安装ntfs-3g和修改fstab sudo apt-get install ntfs-3g modprobe fuse  安装好后，建立硬盘的挂载点文件夹，然后修改fstab
/dev/sda1 /mnt/v ntfs defaults,noexec,umask=0000 0 0  后面的6个0，其中前面四个表示权限(可读可写可执行)，后面两个，第一个表示不备份，第二表示不检查
安装docker及docker-compose 树莓派装docker，最方便莫过于用get.docker.com脚本的方法了
curl -sSL https://get.docker.com | sh  搞定后记得让普通用户也能执行docker（脚本完成时候也会提示你）
sudo usermod -aG docker pi  接下来安装docker-compose，我就遇到一些坑，我的树莓派固件版本是2019-04-08-raspbian-stretch-lite，我采用的安装方法是这样
wget https://bootstrap.pypa.io/get-pip.py python get-pip.py  先装好pip，然后安装些依赖
sudo apt-get install build-essential libssl-dev libffi-dev python-dev //Debian and Ubuntu 是这样,如果是Fedora and RHEL-derivatives //sudo yum install gcc libffi-devel python-devel openssl-devel  然后，就开始愉快的安装及等待了</description>
    </item>
    
    <item>
      <title>给树莓派加个wifi</title>
      <link>https://cheng.fan/2019/%E7%BB%99%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8A%A0%E4%B8%AAwifi/</link>
      <pubDate>Mon, 22 Apr 2019 21:53:35 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/%E7%BB%99%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8A%A0%E4%B8%AAwifi/</guid>
      <description> 手里有个还在服役的树莓派2b，没有wifi模块，想到之前从某宝购得一个EP-N8508GS接收模块，那就加上试试 扫描网络&amp;amp;添加 iwlist wlan0 scan|grep ESSID  找到自己的ssid，开始编辑文件
vi /etc/wpa_supplicant/wpa_supplicant.conf  添加network
network={ ssid=&amp;quot;Hello&amp;quot; key_mgmt=WPA-PSK psk=&amp;quot;12345678&amp;quot; }  如果你要添加的是隐藏网络，则格式就得添加字段scan_ssid=1，其他不变。如果是没有密码的网络。则需要将字段key_mgmt=NONE，同时保留ssid字段即可
启动wifi模块 一般一个reboot下去看结果，我喜欢用这两个命令
ifdown wlan0 ifup wlan0  一般就可以了，查看ip地址就用ifconfig
需要静态ip 需要wifi是静态ip，需要修改interfaces文件，补全如下所示
vi /etc/network/interfaces auto lo iface lo inet loopback auto eth0 iface eth0 inet dhcp auto wlan0 allow-hotplug wlan0 iface wlan0 inet static address 192.168.1.6 netmask 255.255.255.0 gateway 192.168.1.1 dns-nameservers 223.5.5.5 wpa_conf /etc/wpa_supplicant/wpa_supplicant.conf  至此，使用/etc/init.d/networking restart 重启网络，reboot
其他 关于interfaces文件里的一些解释
auto lo //表示使用localhost iface eth0 inet dhcp //表示如果有网卡ech0, 则用dhcp获得IP地址 auto wlan0 //表示如果有wlan设备，使用wlan0设备名 allow-hotplug wlan0 //表示wlan设备可以热插拨 iface wlan0 inet dhcp //表示如果有WLAN网卡wlan0, 则用dhcp获得IP地址  </description>
    </item>
    
    <item>
      <title>树莓派修改密码</title>
      <link>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/</link>
      <pubDate>Mon, 22 Apr 2019 17:14:54 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/</guid>
      <description>拿到一个硬件黑盒玩，连上网后，k3分配了个ip，多看了一眼发现识别为Raspberry，嗯？黑盒里是树莓派？下意识ssh尝试连进去，发现默认密码不对，随便输入几个弱密码也不行。拆开盒子发现果然一部分是树莓派，和我在用的2b 一模一样（嫌弃网口100M），好吧，那就开始改密码吧 备份文件 因为之前很多次翻车的经验，首先要做的当然能备份的东西都备着，有备无患嘛~用DiskGenius即可，因为树莓派中的文件可见，直接进去，复制相关文件夹到本地，然后搞定~But，对于大文件，DiskGenius免费版是不行的，emmm，你懂的。
修改cmdline.txt文件 sd卡插入读卡器连电脑，直接进boot分区，找到该文件，习惯性用Sublime打开，end 到行尾，空格，加入以下
init=/bin/sh  修改密码 sd卡插回树莓派中，hdmi连上显示器，usb连上键盘，开机，等光标开始停下。开始输入以下
mount -rw -o remount / passwd root  嗯，这样就好了，同步并执行下初始化
sync exec /sbin/init  到这里其实已经差不多了，用着新密码进入，然后halt关机
还原cmdline.txt文件 再次编辑该文件，将之前加的，删除即可。弹出设备时，如果发现设备正忙，这时候在任务管理器里-性能-资源监视器-CPU-搜索句柄中搜索盘符，找到谁在占用哟</description>
    </item>
    
  </channel>
</rss>