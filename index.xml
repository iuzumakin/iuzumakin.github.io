<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xVan on xVan</title>
    <link>https://cheng.fan/</link>
    <description>Recent content in xVan on xVan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Apr 2019 01:54:05 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>树莓派编译RTL8812au无线网卡</title>
      <link>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%BC%96%E8%AF%91rtl8812au%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/</link>
      <pubDate>Sat, 27 Apr 2019 01:54:05 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%BC%96%E8%AF%91rtl8812au%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/</guid>
      <description>

&lt;h4 id=&#34;树莓派2b是100m网口-于是想能不能提升下弄个千兆网口-虽然是usb2-0限制-但是也会有一定的提升吧-当然结局是比较悲伤的-不折腾了-记录下编译这个网卡的步骤-我买的是-comfast-cf-912ac-这款的芯片是rtl8812au&#34;&gt;&lt;em&gt;树莓派2b是100M网口，于是想能不能提升下弄个千兆网口，虽然是USB2.0限制，但是也会有一定的提升吧，当然结局是比较悲伤的，不折腾了，记录下编译这个网卡的步骤，我买的是 COMFAST CF-912AC 这款的芯片是RTL8812au&lt;/em&gt;&lt;/h4&gt;

&lt;h3 id=&#34;安装内核&#34;&gt;安装内核&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install raspberrypi-kernel-headers build-essential
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;耐心等一会，我之前手急给中断了，坏了，重装&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;编译&#34;&gt;编译&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo git clone https://github.com/diederikdehaas/rtl8812AU
cd rtl8812au
sudo vi Makefile

CONFIG_PLATFORM_I386_PC = n
CONFIG_PLATFORM_ARM_RPI = y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改后 &lt;strong&gt;make -j4&lt;/strong&gt; ，等几分钟&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make install
sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，看是不是能驱动起来&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派连结NAS</title>
      <link>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9E%E7%BB%93nas/</link>
      <pubDate>Sat, 27 Apr 2019 01:35:06 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9E%E7%BB%93nas/</guid>
      <description>

&lt;h4 id=&#34;树莓派虽然性能差了些-但是又不是不能用-挂载硬盘后装个nas-内网访问还是挺爽的&#34;&gt;&lt;em&gt;树莓派虽然性能差了些，但是又不是不能用，挂载硬盘后装个NAS，内网访问还是挺爽的&lt;/em&gt;&lt;/h4&gt;

&lt;h3 id=&#34;安装nas&#34;&gt;安装NAS&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install samba samba-common-bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上两个是必须，下面两个是可选&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install netatalk (用于支持AFP)
sudo apt-get install avahi-daemon（用于支持网内的计算机自动发现）
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;配置文件&#34;&gt;配置文件&lt;/h3&gt;

&lt;p&gt;备份配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.back
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo vi /etc/samba/smb.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后一行添加&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[PiNAS]
    # 说明信息
    comment = NAS Storage
    # 可以访问的用户
    valid users = pi,root
    # 共享文件的路径
    path = /media/pi/
    # 列目录
    browseable = yes
    # 可写
    writable = yes
    # 新建文件的权限为 664
    create mask = 0664
    # 新建目录的权限为 775
    directory mask = 0775
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;复制时候，最好把说明信息删除，我好像记得踩过坑&lt;/p&gt;

&lt;p&gt;配置好后，测试下是否有错误 &lt;strong&gt;testparm&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;添加账户与重启服务&#34;&gt;添加账户与重启服务&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo smbpasswd -a pi
sudo /etc/init.d/samba restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;好了，就这样，没了&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派快速安装,挂载,docker环境</title>
      <link>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85%E6%8C%82%E8%BD%BDdocker%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Thu, 25 Apr 2019 02:45:56 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85%E6%8C%82%E8%BD%BDdocker%E7%8E%AF%E5%A2%83/</guid>
      <description>

&lt;h4 id=&#34;最近手里的树莓派老是被我玩坏-于是乎重装次数就多了起来-记录下这一套我需要环境的流程操作&#34;&gt;&lt;em&gt;最近手里的树莓派老是被我玩坏，于是乎重装次数就多了起来，记录下这一套我需要环境的流程操作&lt;/em&gt;&lt;/h4&gt;

&lt;h3 id=&#34;sd卡安装&#34;&gt;SD卡安装&lt;/h3&gt;

&lt;p&gt;简单概括下就是sd卡format下，然后把img灌进去，所需要的软件有两个&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SD Card Formatter&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Win32DiskImager&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;树莓派系统初始化&#34;&gt;树莓派系统初始化&lt;/h3&gt;

&lt;p&gt;连上键盘显示器，进入系统后，初始密码raspberry，修改密码，允许并enable ssh&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl start ssh
sudo systemctl enable ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搞定后，就不用趴在显示器前，回到电脑前，ssh进去即可&lt;/p&gt;

&lt;h3 id=&#34;安装ntfs-3g和修改fstab&#34;&gt;安装ntfs-3g和修改fstab&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install ntfs-3g
modprobe fuse
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装好后，建立硬盘的挂载点文件夹，然后修改fstab&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/dev/sda1 /mnt/v ntfs defaults,noexec,umask=0000 0 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;后面的6个0，其中前面四个表示权限(可读可写可执行)，后面两个，第一个表示不备份，第二表示不检查&lt;/p&gt;

&lt;h3 id=&#34;安装docker及docker-compose&#34;&gt;安装docker及docker-compose&lt;/h3&gt;

&lt;p&gt;树莓派装docker，最方便莫过于用get.docker.com脚本的方法了&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sSL https://get.docker.com | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搞定后记得让普通用户也能执行docker（脚本完成时候也会提示你）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo usermod -aG docker pi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来安装docker-compose，我就遇到一些坑，我的树莓派固件版本是&lt;strong&gt;2019-04-08-raspbian-stretch-lite&lt;/strong&gt;，我采用的安装方法是这样&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;先装好pip，然后安装些依赖&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install build-essential libssl-dev libffi-dev python-dev
//Debian and Ubuntu 是这样,如果是Fedora and RHEL-derivatives
//sudo yum install gcc libffi-devel python-devel openssl-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，就开始愉快的安装及等待了&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pip install docker-compose
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派修改密码</title>
      <link>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/</link>
      <pubDate>Mon, 22 Apr 2019 17:14:54 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/</guid>
      <description>

&lt;h4 id=&#34;拿到一个硬件黑盒玩-连上网后-k3分配了个ip-多看了一眼发现识别为raspberry-嗯-黑盒里是树莓派-下意识ssh尝试连进去-发现默认密码不对-随便输入几个弱密码也不行-拆开盒子发现果然一部分是树莓派-和我在用的2b-一模一样-嫌弃网口100m-好吧-那就开始改密码吧&#34;&gt;&lt;em&gt;拿到一个硬件黑盒玩，连上网后，k3分配了个ip，多看了一眼发现识别为Raspberry，嗯？黑盒里是树莓派？下意识ssh尝试连进去，发现默认密码不对，随便输入几个弱密码也不行。拆开盒子发现果然一部分是树莓派，和我在用的2b 一模一样（嫌弃网口100M），好吧，那就开始改密码吧&lt;/em&gt;&lt;/h4&gt;

&lt;h3 id=&#34;备份文件&#34;&gt;备份文件&lt;/h3&gt;

&lt;p&gt;因为之前很多次翻车的经验，首先要做的当然能备份的东西都备着，有备无患嘛~用DiskGenius即可，因为树莓派中的文件可见，直接进去，复制相关文件夹到本地，然后搞定~But，对于大文件，DiskGenius免费版是不行的，emmm，你懂的。&lt;/p&gt;

&lt;h3 id=&#34;修改cmdline-txt文件&#34;&gt;修改cmdline.txt文件&lt;/h3&gt;

&lt;p&gt;sd卡插入读卡器连电脑，直接进boot分区，找到该文件，习惯性用Sublime打开，end 到行尾，空格，加入以下&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;init=/bin/sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;修改密码&#34;&gt;修改密码&lt;/h3&gt;

&lt;p&gt;sd卡插回树莓派中，hdmi连上显示器，usb连上键盘，开机，等光标开始停下。开始输入以下&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mount -rw -o remount /
passwd root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;嗯，这样就好了，同步并执行下初始化&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sync
exec /sbin/init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;到这里其实已经差不多了，用着新密码进入，然后halt关机&lt;/p&gt;

&lt;h3 id=&#34;还原cmdline-txt文件&#34;&gt;还原cmdline.txt文件&lt;/h3&gt;

&lt;p&gt;再次编辑该文件，将之前加的，删除即可。弹出设备时，如果发现设备正忙，这时候在任务管理器里-性能-资源监视器-CPU-搜索句柄中搜索盘符，找到谁在占用哟&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fish</title>
      <link>https://cheng.fan/2019/fish/</link>
      <pubDate>Tue, 26 Mar 2019 19:37:39 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/fish/</guid>
      <description>&lt;p&gt;第一天的鱼&lt;br /&gt;
emmmm 基本语法快看完了&lt;br /&gt;
这个函数闭包 没咋理解&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import &amp;quot;fmt&amp;quot;

// fibonacci 函数会返回一个返回 int 的函数。
func fibonacci() func() int {
    sum := 0
    a := 0
    b := 1
    return func() int {
        sum =  a + b
        a = b
        b = sum
        return sum
    }
}

func main() {
    f := fibonacci()
    fmt.Println(f())
    for i := 0; i &amp;lt; 10; i++ {
        fmt.Println(f())
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Hello Go!</title>
      <link>https://cheng.fan/2019/hello-go/</link>
      <pubDate>Tue, 26 Mar 2019 01:48:34 +0800</pubDate>
      
      <guid>https://cheng.fan/2019/hello-go/</guid>
      <description>&lt;p&gt;这可能是开始学习Go的标志，也可能不是。&lt;/p&gt;

&lt;p&gt;谁晓得呢~ 三天打鱼第一天 0.0&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cheng.fan/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cheng.fan/about/</guid>
      <description>

&lt;h3 id=&#34;关于本站&#34;&gt;关于本站&lt;/h3&gt;

&lt;p&gt;在梦里酝酿了好久，大脑觉得他已经OK了，但是手脚说你行你上，懒得不行，空闲时间就尝试下搞一个折腾~&lt;/p&gt;

&lt;p&gt;就当拿来记录吧，毕竟柯南道尔说过人的大脑就像一间阁楼，balabala，空间是有限的……&lt;/p&gt;

&lt;p&gt;就酱 &amp;lt;(￣︶￣)↗[GO!]&lt;/p&gt;

&lt;h3 id=&#34;关于我&#34;&gt;关于我&lt;/h3&gt;

&lt;p&gt;我也不知道怎么回答，三天打鱼两天晒网的反面典型吧，hhhh&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>